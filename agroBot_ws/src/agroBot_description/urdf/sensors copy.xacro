<?xml version="1.0" ?>
<robot name="Robot" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<!-- Add a GPS sensor -->
  <gazebo reference="gps_link">
  <sensor name="my_gps" type="gps">
    <!-- ensure the sensor is active (required) -->
    <always_on>true</always_on>
    <update_rate>10</update_rate>
    <plugin name="my_gps_plugin" filename="libgazebo_ros_gps_sensor.so">
      <ros>
        <!-- publish to /gps/data -->
        <namespace>/gps</namespace>
        <remapping>~/out:=data</remapping>
      </ros>
    </plugin>
  </sensor>
  </gazebo>

  <joint name="gps_joint" type="fixed">
    <parent link="base_link"/>
    <child link="gps_link"/>
  </joint>

  <link name="gps_link">
    <visual>
      <geometry>
        <sphere radius="0.001"/>
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1"/>
      </material>
    </visual>
  </link>


  <!-- Add a IMU sensor -->

<gazebo reference="imu_link">
<sensor name="imu_sensor" type="imu">
<plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
    <ros>
        <namespace>/demo</namespace>
        <remapping>~/out:=imu</remapping>
    </ros>
    <initial_orientation_as_reference>false</initial_orientation_as_reference>
    </plugin>
    <always_on>true</always_on>
    <update_rate>10</update_rate>
    <visualize>true</visualize>
    <imu>
    <angular_velocity>
        <x>
        <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
        </noise>
        </x>
        <y>
        <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
        </noise>
        </y>
        <z>
        <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
        </noise>
        </z>
    </angular_velocity>
    <linear_acceleration>
        <x>
        <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
        </noise>
        </x>
        <y>
        <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
        </noise>
        </y>
        <z>
        <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
        </noise>
        </z>
    </linear_acceleration>
    </imu>
</sensor>
</gazebo>


  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>

  <link name="imu_link">
    <visual>
      <geometry>
        <sphere radius="0.001"/>
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1"/>
      </material>
    </visual>
  </link>

<!-- ////////////////////////////////////  Camera LINK //////////////////////////////////////////////// -->

  <link name="camera_link">

    <inertial>
      <mass value="0.75" />
      <inertia ixx="0.0001295" iyy="0.0001295" izz="0.000199322" ixy="0.0" ixz="0.0" iyz="0.0" />
      <origin />
    </inertial>

    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <box size=".05 .05 .05"/>
      </geometry>
    </visual>

    <collision>
      <geometry>
        <box size=".05 .05 .05"/>
      </geometry>
    </collision>
  </link>

  <joint name="camera_joint" type="fixed">
    <origin xyz="0.0 -.58 -0.2" rpy="0.0 0.0 1.57" />
    <parent link="base_link" />
    <child link="camera_link" />

  </joint>

  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="roboagricola_camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <visualize>true</visualize>
        <updateRate>0.0</updateRate>
        <cameraName>VRB/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

</robot>